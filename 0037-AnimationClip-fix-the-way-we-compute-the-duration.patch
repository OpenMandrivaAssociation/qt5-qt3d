From d8997fb4b17cb9f0ea527093649fc04f85f9c00b Mon Sep 17 00:00:00 2001
From: Paul Lemire <paul.lemire@kdab.com>
Date: Tue, 23 Nov 2021 09:27:43 +0100
Subject: [PATCH 37/39] AnimationClip: fix the way we compute the duration

We wrongly assumed the start time of a clip was always 0. In practice this
might not be the case. Therefore, we now compute duration as tEnd - tStart.

Change-Id: I13ca860f3366c2aba5e978cb0c955e7bb2e7bc39
Reviewed-by: Sean Harmer <sean.harmer@kdab.com>
(cherry picked from commit 7b23cb1ca5b32fcf24f889e79cec756786f86233)
Reviewed-by: Paul Lemire <paul.lemire@kdab.com>
---
 src/animation/backend/animationclip.cpp | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/src/animation/backend/animationclip.cpp b/src/animation/backend/animationclip.cpp
index 2c7e4fffb..c72e41157 100644
--- a/src/animation/backend/animationclip.cpp
+++ b/src/animation/backend/animationclip.cpp
@@ -354,15 +354,18 @@ void AnimationClip::clearData()
 float AnimationClip::findDuration()
 {
     // Iterate over the contained fcurves and find the longest one
-    double tMax = 0.0;
+    float tMax = 0.f;
+    float tMin = 1.0f;
     for (const Channel &channel : qAsConst(m_channels)) {
         for (const ChannelComponent &channelComponent : qAsConst(channel.channelComponents)) {
-            const float t = channelComponent.fcurve.endTime();
-            if (t > tMax)
-                tMax = t;
+            const float tStart = channelComponent.fcurve.startTime();
+            const float tEnd = channelComponent.fcurve.endTime();
+            tMax = std::max(tEnd, tMax);
+            tMin = std::min(tStart, tMin);
         }
     }
-    return tMax;
+    // We can't have a negative duration
+    return std::max(tMax - tMin, 0.0f);
 }
 
 int AnimationClip::findChannelComponentCount()
-- 
2.34.1

