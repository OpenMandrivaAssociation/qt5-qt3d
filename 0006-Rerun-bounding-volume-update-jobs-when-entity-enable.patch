From 10ce48d8345c9c0fd151df70d7390e7d0488f270 Mon Sep 17 00:00:00 2001
From: Paul Lemire <paul.lemire@kdab.com>
Date: Mon, 3 May 2021 14:39:18 +0200
Subject: [PATCH 06/18] Rerun bounding volume update jobs when entity enabled
 property changes

Otherwise, this results in the bounding volume being out of sync with
entities (an entity initially disabled that gets enabled would have an
empty bounding volume) until some other events in the scene triggers a
rebuild.

Task-number: QTBUG-93035
Change-Id: Ia21eec0eb5601169e1789321080803a5aed12e82
Reviewed-by: Mike Krus <mike.krus@kdab.com>
(cherry picked from commit d29f3b277d0f949f2fa0b0e0214e38ec3e790c40)
Reviewed-by: Paul Lemire <paul.lemire@kdab.com>
---
 src/render/frontend/qrenderaspect.cpp   | 9 ++++++---
 tests/auto/render/aspect/tst_aspect.cpp | 4 ++++
 2 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/src/render/frontend/qrenderaspect.cpp b/src/render/frontend/qrenderaspect.cpp
index 4e8967e6e..0024bf19a 100644
--- a/src/render/frontend/qrenderaspect.cpp
+++ b/src/render/frontend/qrenderaspect.cpp
@@ -717,17 +717,20 @@ QVector<Qt3DCore::QAspectJobPtr> QRenderAspect::jobsToExecute(qint64 time)
         if (entitiesEnabledDirty)
             jobs.push_back(d->m_updateTreeEnabledJob);
 
-        if (dirtyBitsForFrame & AbstractRenderer::TransformDirty) {
+        if (entitiesEnabledDirty ||
+            dirtyBitsForFrame & AbstractRenderer::TransformDirty) {
             jobs.push_back(d->m_worldTransformJob);
             jobs.push_back(d->m_updateWorldBoundingVolumeJob);
         }
 
-        if (dirtyBitsForFrame & AbstractRenderer::GeometryDirty ||
+        if (entitiesEnabledDirty ||
+            dirtyBitsForFrame & AbstractRenderer::GeometryDirty ||
             dirtyBitsForFrame & AbstractRenderer::BuffersDirty) {
             jobs.push_back(d->m_calculateBoundingVolumeJob);
         }
 
-        if (dirtyBitsForFrame & AbstractRenderer::GeometryDirty ||
+        if (entitiesEnabledDirty ||
+            dirtyBitsForFrame & AbstractRenderer::GeometryDirty ||
             dirtyBitsForFrame & AbstractRenderer::TransformDirty) {
             jobs.push_back(d->m_expandBoundingVolumeJob);
         }
diff --git a/tests/auto/render/aspect/tst_aspect.cpp b/tests/auto/render/aspect/tst_aspect.cpp
index 9bd5df698..5d0ead7ef 100644
--- a/tests/auto/render/aspect/tst_aspect.cpp
+++ b/tests/auto/render/aspect/tst_aspect.cpp
@@ -139,6 +139,10 @@ private Q_SLOTS:
         // THEN -> enabled dirty
         QCOMPARE(jobs.size(),
                  1 + // UpdateTreeEnabled
+                 1 + // UpdateTransform
+                 1 + // UpdateWorldBoundingVolume
+                 1 + // CalcBoundingVolume
+                 1 + // ExpandBoundingVolume
                  1 + // SyncLoadingJobs
                  1 + // UpdateSkinningPalette
                  1 + // UpdateLevelOfDetail
-- 
2.35.1

